<?php

/*
 * This class is generated by jignesh
 * To perform usersearch and companysearch related operations
 * Before i created class there was methods in APIController updateUserSearch() and updateCompanySearch() that you can get on all release before V0.7
 */

namespace Mobntouch\APIBundle\Classes;

use Mobntouch\DataBaseBundle\Document\Jobs;
use Mobntouch\DataBaseBundle\Document\User;
use Mobntouch\DataBaseBundle\Document\UserSearch;
use Mobntouch\DataBaseBundle\Document\Company;
use Mobntouch\DataBaseBundle\Document\CompanySearch;

/**
 * Manage userSearch and companySearch related operations
 *
 * @author Ved Solution
 */
class ManageSearch {

    private $dm;

    function __construct($dm) {
        $this->dm = $dm;
    }

    public function updateUserSearch(User $user) {

        if (!$user) {
            return;
        }

        $name = $this->removeAccents($user->getName());
        $lastname = $this->removeAccents($user->getLastname());
        $company = $this->removeAccents($user->getCompany());
        $jobTitle = $this->removeAccents($user->getJobTitle());

        $arrSearch = array();

        if (isset($user->name) && !empty($user->name)) {
            $arrSearch[] = $user->name;
        }

        if (isset($user->lastname) && !empty($user->lastname)) {
            $arrSearch[] = $user->lastname;
        }

        if (isset($user->name) && !empty($user->name) && isset($user->lastname) && !empty($user->lastname)) {
            $arrSearch[] = $user->name . ' ' . $user->lastname;
        }

        if (isset($user->city) && !empty($user->city)) {
            $arrSearch[] = $user->city;
        }

        if (isset($user->country) && !empty($user->country)) {
            $arrSearch[] = $user->country;
        }

        if (isset($user->miniResume) && !empty($user->miniResume)) {
            $arrSearch[] = $user->miniResume;
        }

        if (isset($user->jobTitle) && !empty($user->jobTitle)) {
            $arrSearch[] = $user->jobTitle;
        }

        if (isset($user->companyType) && !empty($user->companyType)) {
            $arrSearch[] = $user->companyType;
        }

        if (isset($user->companySubType) && !empty($user->companySubType)) {
            $this->imitateMerge($arrSearch, $user->companySubType);
        }

        if (isset($user->company) && !empty($user->company)) {
            $arrSearch[] = $user->company;
        }

        if (isset($user->currentStatus) && !empty($user->currentStatus)) {
            $arrSearch[] = $user->currentStatus;
        }

        if (isset($user->keywords) && !empty($user->keywords)) {
            $this->imitateMerge($arrSearch, $user->keywords);
        }

        /* Removed caused problem if i search CEO MOBINTOUCH, user who is ceo of other company having email like xyz@mobintouch also came in result 
          if (isset($user->email) && !empty($user->email)) {
          $arrSearch[] = $user->email;
          } */

        if (isset($user->phone) && !empty($user->phone)) {
            $arrSearch[] = $user->phone;
        }

        if (isset($user->imContacts) && !empty($user->imContacts) && array_key_exists(1, $user->imContacts)) {
            $arrSearch[] = $user->imContacts[1];
        }

        if (isset($user->services) && !empty($user->services) && count($user->services) > 0) {
            foreach ($user->services as $service) {
                $arrSearch[] = $service['service'];
                $arrSearch[] = $service['experties'];
                $this->imitateMerge($arrSearch, $service['subServices']);
            }
        }

        if (isset($user->educations) && !empty($user->educations) && count($user->educations) > 0) {
            foreach ($user->educations as $education) {
                if (isset($education['college'])) {
                    $arrSearch[] = $education['college'];
                }
                if (isset($education['degree'])) {
                    $arrSearch[] = $education['degree'];
                }
            }
        }

        if (isset($user->experiences) && !empty($user->experiences) && count($user->experiences) > 0) {
            foreach ($user->experiences as $experiences) {
                if (isset($education['description'])) {
                    $arrSearch[] = $experiences['description'];
                }
            }
        }
        
        if (isset($user->customServices) && !empty($user->customServices) && count($user->customServices) > 0) {
            foreach ($user->customServices as $service) {
                $arrSearch[] = $service['action'];
                $arrSearch[] = $service['market'];
                if(isset($service['values'])){
                    $this->imitateMerge($arrSearch, $service['values']);
                }
            }
        }

        if (isset($user->summary) && !empty($user->summary)) {
            $arrSearch[] = $user->summary;
        }

        if (isset($user->competences) && !empty($user->competences)) {
            $this->imitateMerge($arrSearch, $user->competences);
        }

        $search = array_filter(array_values(array_unique(array_map('strtolower', $arrSearch), SORT_REGULAR)), function($value) {
            return $value !== '';
        });

        /* $this->dm->createQueryBuilder('DataBaseBundle:UserSearch')
          ->update()
          ->multiple(false)
          ->field('userID')->equals($user->getId())
          ->field('username')->set($user->getUsername())
          ->field('name')->set($name)
          ->field('lastname')->set($lastname)
          ->field('jobTitle')->set($jobTitle)
          ->field('company')->set($company)
          ->field('avatar')->set($user->getAvatar())
          ->field('responseRate')->set($user->getResponseRate())
          ->field('totalReceivedEmails')->set($user->getTotalReceivedEmails())
          ->field('validated')->set($user->getValidated())
          ->field('search')->set($search)
          ->upsert(true)
          ->getQuery()
          ->execute(); */

        $this->dm->createQueryBuilder('DataBaseBundle:User')
                ->update()
                ->multiple(false)
                ->field('id')->equals($user->getId())
                ->field('search')->set($search)
                ->upsert(true)
                ->getQuery()
                ->execute();

        $this->dm->flush();
        $this->dm->clear();

        return $search;
    }

    public function updateJobSearch(Jobs $job) {

        if (!$job) {
            return array();
        }

        $jobTitle = explode(' ', $this->removeAccents($job->getJobTitle()));
        $description = $this->removeAccents($job->getDescription());

        $arrSearch = array();
        $this->imitateMerge($arrSearch, $jobTitle);
        //$arrSearch[] = $description;

        if (isset($job->primaryRole) && !empty($job->primaryRole)) {
            $arrSearch[] = $job->primaryRole;
        }

        if (isset($job->otherRoles) && !empty($job->otherRoles)) {
            $this->imitateMerge($arrSearch, $job->otherRoles);
        }

        if (isset($job->jobType) && !empty($job->jobType)) {
            $arrSearch[] = $job->jobType;
        }

        if (isset($job->location) && !empty($job->location)) {
            $arrSearch[] = $job->getLocation()['city'];
            $arrSearch[] = $job->getLocation()['country'];
        }

        if (isset($job->skills) && !empty($job->skills)) {
            $this->imitateMerge($arrSearch, $job->skills);
        }

        if (isset($job->company) && !empty($job->company)) {
            $companySearch = explode(' ', $this->removeAccents($job->getCompany()['name']));
            $this->imitateMerge($arrSearch, $companySearch);
        }

        $arrSearch[] = $this->removeAccents($job->createdBy['username']);
        $arrSearch[] = $this->removeAccents($job->createdBy['name']);
        $arrSearch[] = $this->removeAccents($job->createdBy['lastname']);

        $search = array_filter(array_values(array_unique(array_map('strtolower', $arrSearch), SORT_REGULAR)), function($value) {
            return $value !== '';
        });

        return $search;
    }

    public function updateCompanySearch(Company $company) {

        if (!$company) {
            return;
        }

        $arrSearch = array();
        $name = $this->removeAccents($company->getName());
        $username = $this->removeAccents($company->getUsername());
        $arrSearch = array_merge(explode(" ", $name), explode(" ", $username));

        if (isset($company->city) && !empty($company->city)) {
            $arrSearch[] = $company->city;
        }

        if (isset($company->country) && !empty($company->country)) {
            $arrSearch[] = $company->country;
        } else {
            $company->country = $this->getCountryName($company->basedCountry);
            $arrSearch[] = $company->country;
        }

        if (isset($company->basedCountry) && !empty($company->basedCountry)) {
            $arrSearch[] = $company->basedCountry;
        }

        if (isset($company->companyType) && !empty($company->companyType)) {
            $arrSearch[] = $company->companyType;
        }

        if (isset($company->companyTypes) && !empty($company->companyTypes) && is_array($company->companyTypes)) {
            $this->imitateMerge($arrSearch, $company->companyTypes);
        }

        if (isset($company->markets) && !empty($company->markets) && is_array($company->markets)) {
            $this->imitateMerge($arrSearch, $company->markets);
        }

        /* if (isset($company->founders) && !empty($company->founders)) {
          $founders = explode(",", $company->founders);
          $this->imitateMerge($arrSearch, $founders);
          } */

        $search = array_filter(array_values(array_unique(array_map('strtolower', $arrSearch), SORT_REGULAR)), function($value) {
            return $value !== '';
        });

        return $search;
    }

    private function imitateMerge(&$array1, &$array2) {
        foreach ($array2 as $i) {
            $array1[] = $i;
        }
    }

    private function removeAccents($str) {
        $a = array('À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï', 'Ð', 'Ñ', 'Ò', 'Ó', 'Ô', 'Õ', 'Ö', 'Ø', 'Ù', 'Ú', 'Û', 'Ü', 'Ý', 'ß', 'à', 'á', 'â', 'ã', 'ä', 'å', 'æ', 'ç', 'è', 'é', 'ê', 'ë', 'ì', 'í', 'î', 'ï', 'ñ', 'ò', 'ó', 'ô', 'õ', 'ö', 'ø', 'ù', 'ú', 'û', 'ü', 'ý', 'ÿ', 'Ā', 'ā', 'Ă', 'ă', 'Ą', 'ą', 'Ć', 'ć', 'Ĉ', 'ĉ', 'Ċ', 'ċ', 'Č', 'č', 'Ď', 'ď', 'Đ', 'đ', 'Ē', 'ē', 'Ĕ', 'ĕ', 'Ė', 'ė', 'Ę', 'ę', 'Ě', 'ě', 'Ĝ', 'ĝ', 'Ğ', 'ğ', 'Ġ', 'ġ', 'Ģ', 'ģ', 'Ĥ', 'ĥ', 'Ħ', 'ħ', 'Ĩ', 'ĩ', 'Ī', 'ī', 'Ĭ', 'ĭ', 'Į', 'į', 'İ', 'ı', 'Ĳ', 'ĳ', 'Ĵ', 'ĵ', 'Ķ', 'ķ', 'Ĺ', 'ĺ', 'Ļ', 'ļ', 'Ľ', 'ľ', 'Ŀ', 'ŀ', 'Ł', 'ł', 'Ń', 'ń', 'Ņ', 'ņ', 'Ň', 'ň', 'ŉ', 'Ō', 'ō', 'Ŏ', 'ŏ', 'Ő', 'ő', 'Œ', 'œ', 'Ŕ', 'ŕ', 'Ŗ', 'ŗ', 'Ř', 'ř', 'Ś', 'ś', 'Ŝ', 'ŝ', 'Ş', 'ş', 'Š', 'š', 'Ţ', 'ţ', 'Ť', 'ť', 'Ŧ', 'ŧ', 'Ũ', 'ũ', 'Ū', 'ū', 'Ŭ', 'ŭ', 'Ů', 'ů', 'Ű', 'ű', 'Ų', 'ų', 'Ŵ', 'ŵ', 'Ŷ', 'ŷ', 'Ÿ', 'Ź', 'ź', 'Ż', 'ż', 'Ž', 'ž', 'ſ', 'ƒ', 'Ơ', 'ơ', 'Ư', 'ư', 'Ǎ', 'ǎ', 'Ǐ', 'ǐ', 'Ǒ', 'ǒ', 'Ǔ', 'ǔ', 'Ǖ', 'ǖ', 'Ǘ', 'ǘ', 'Ǚ', 'ǚ', 'Ǜ', 'ǜ', 'Ǻ', 'ǻ', 'Ǽ', 'ǽ', 'Ǿ', 'ǿ', 'Ά', 'ά', 'Έ', 'έ', 'Ό', 'ό', 'Ώ', 'ώ', 'Ί', 'ί', 'ϊ', 'ΐ', 'Ύ', 'ύ', 'ϋ', 'ΰ', 'Ή', 'ή');
        $b = array('A', 'A', 'A', 'A', 'A', 'A', 'AE', 'C', 'E', 'E', 'E', 'E', 'I', 'I', 'I', 'I', 'D', 'N', 'O', 'O', 'O', 'O', 'O', 'O', 'U', 'U', 'U', 'U', 'Y', 's', 'a', 'a', 'a', 'a', 'a', 'a', 'ae', 'c', 'e', 'e', 'e', 'e', 'i', 'i', 'i', 'i', 'n', 'o', 'o', 'o', 'o', 'o', 'o', 'u', 'u', 'u', 'u', 'y', 'y', 'A', 'a', 'A', 'a', 'A', 'a', 'C', 'c', 'C', 'c', 'C', 'c', 'C', 'c', 'D', 'd', 'D', 'd', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'E', 'e', 'G', 'g', 'G', 'g', 'G', 'g', 'G', 'g', 'H', 'h', 'H', 'h', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'I', 'i', 'IJ', 'ij', 'J', 'j', 'K', 'k', 'L', 'l', 'L', 'l', 'L', 'l', 'L', 'l', 'l', 'l', 'N', 'n', 'N', 'n', 'N', 'n', 'n', 'O', 'o', 'O', 'o', 'O', 'o', 'OE', 'oe', 'R', 'r', 'R', 'r', 'R', 'r', 'S', 's', 'S', 's', 'S', 's', 'S', 's', 'T', 't', 'T', 't', 'T', 't', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'W', 'w', 'Y', 'y', 'Y', 'Z', 'z', 'Z', 'z', 'Z', 'z', 's', 'f', 'O', 'o', 'U', 'u', 'A', 'a', 'I', 'i', 'O', 'o', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'U', 'u', 'A', 'a', 'AE', 'ae', 'O', 'o', 'Α', 'α', 'Ε', 'ε', 'Ο', 'ο', 'Ω', 'ω', 'Ι', 'ι', 'ι', 'ι', 'Υ', 'υ', 'υ', 'υ', 'Η', 'η');
        return str_replace($a, $b, $str);
    }

    public function getCountryName($code) {
        if (!isset($code) || empty($code)) {
            return null;
        }

        $code = strtoupper($code);
        if ($code == 'AF')
            return 'Afghanistan';
        if ($code == 'AX')
            return 'Aland Islands';
        if ($code == 'AL')
            return 'Albania';
        if ($code == 'DZ')
            return 'Algeria';
        if ($code == 'AS')
            return 'American Samoa';
        if ($code == 'AD')
            return 'Andorra';
        if ($code == 'AO')
            return 'Angola';
        if ($code == 'AI')
            return 'Anguilla';
        if ($code == 'AQ')
            return 'Antarctica';
        if ($code == 'AG')
            return 'Antigua and Barbuda';
        if ($code == 'AR')
            return 'Argentina';
        if ($code == 'AM')
            return 'Armenia';
        if ($code == 'AW')
            return 'Aruba';
        if ($code == 'AU')
            return 'Australia';
        if ($code == 'AT')
            return 'Austria';
        if ($code == 'AZ')
            return 'Azerbaijan';
        if ($code == 'BS')
            return 'Bahamas the';
        if ($code == 'BH')
            return 'Bahrain';
        if ($code == 'BD')
            return 'Bangladesh';
        if ($code == 'BB')
            return 'Barbados';
        if ($code == 'BY')
            return 'Belarus';
        if ($code == 'BE')
            return 'Belgium';
        if ($code == 'BZ')
            return 'Belize';
        if ($code == 'BJ')
            return 'Benin';
        if ($code == 'BM')
            return 'Bermuda';
        if ($code == 'BT')
            return 'Bhutan';
        if ($code == 'BO')
            return 'Bolivia';
        if ($code == 'BA')
            return 'Bosnia and Herzegovina';
        if ($code == 'BW')
            return 'Botswana';
        if ($code == 'BV')
            return 'Bouvet Island (Bouvetoya)';
        if ($code == 'BR')
            return 'Brazil';
        if ($code == 'IO')
            return 'British Indian Ocean Territory (Chagos Archipelago)';
        if ($code == 'VG')
            return 'British Virgin Islands';
        if ($code == 'BN')
            return 'Brunei Darussalam';
        if ($code == 'BG')
            return 'Bulgaria';
        if ($code == 'BF')
            return 'Burkina Faso';
        if ($code == 'BI')
            return 'Burundi';
        if ($code == 'KH')
            return 'Cambodia';
        if ($code == 'CM')
            return 'Cameroon';
        if ($code == 'CA')
            return 'Canada';
        if ($code == 'CV')
            return 'Cape Verde';
        if ($code == 'KY')
            return 'Cayman Islands';
        if ($code == 'CF')
            return 'Central African Republic';
        if ($code == 'TD')
            return 'Chad';
        if ($code == 'CL')
            return 'Chile';
        if ($code == 'CN')
            return 'China';
        if ($code == 'CX')
            return 'Christmas Island';
        if ($code == 'CC')
            return 'Cocos (Keeling) Islands';
        if ($code == 'CO')
            return 'Colombia';
        if ($code == 'KM')
            return 'Comoros the';
        if ($code == 'CD')
            return 'Congo';
        if ($code == 'CG')
            return 'Congo the';
        if ($code == 'CK')
            return 'Cook Islands';
        if ($code == 'CR')
            return 'Costa Rica';
        if ($code == 'CI')
            return 'Cote d\'Ivoire';
        if ($code == 'HR')
            return 'Croatia';
        if ($code == 'CU')
            return 'Cuba';
        if ($code == 'CY')
            return 'Cyprus';
        if ($code == 'CZ')
            return 'Czech Republic';
        if ($code == 'DK')
            return 'Denmark';
        if ($code == 'DJ')
            return 'Djibouti';
        if ($code == 'DM')
            return 'Dominica';
        if ($code == 'DO')
            return 'Dominican Republic';
        if ($code == 'EC')
            return 'Ecuador';
        if ($code == 'EG')
            return 'Egypt';
        if ($code == 'SV')
            return 'El Salvador';
        if ($code == 'GQ')
            return 'Equatorial Guinea';
        if ($code == 'ER')
            return 'Eritrea';
        if ($code == 'EE')
            return 'Estonia';
        if ($code == 'ET')
            return 'Ethiopia';
        if ($code == 'FO')
            return 'Faroe Islands';
        if ($code == 'FK')
            return 'Falkland Islands (Malvinas)';
        if ($code == 'FJ')
            return 'Fiji the Fiji Islands';
        if ($code == 'FI')
            return 'Finland';
        if ($code == 'FR')
            return 'France, French Republic';
        if ($code == 'GF')
            return 'French Guiana';
        if ($code == 'PF')
            return 'French Polynesia';
        if ($code == 'TF')
            return 'French Southern Territories';
        if ($code == 'GA')
            return 'Gabon';
        if ($code == 'GM')
            return 'Gambia the';
        if ($code == 'GE')
            return 'Georgia';
        if ($code == 'DE')
            return 'Germany';
        if ($code == 'GH')
            return 'Ghana';
        if ($code == 'GI')
            return 'Gibraltar';
        if ($code == 'GR')
            return 'Greece';
        if ($code == 'GL')
            return 'Greenland';
        if ($code == 'GD')
            return 'Grenada';
        if ($code == 'GP')
            return 'Guadeloupe';
        if ($code == 'GU')
            return 'Guam';
        if ($code == 'GT')
            return 'Guatemala';
        if ($code == 'GG')
            return 'Guernsey';
        if ($code == 'GN')
            return 'Guinea';
        if ($code == 'GW')
            return 'Guinea-Bissau';
        if ($code == 'GY')
            return 'Guyana';
        if ($code == 'HT')
            return 'Haiti';
        if ($code == 'HM')
            return 'Heard Island and McDonald Islands';
        if ($code == 'VA')
            return 'Holy See (Vatican City State)';
        if ($code == 'HN')
            return 'Honduras';
        if ($code == 'HK')
            return 'Hong Kong';
        if ($code == 'HU')
            return 'Hungary';
        if ($code == 'IS')
            return 'Iceland';
        if ($code == 'IN')
            return 'India';
        if ($code == 'ID')
            return 'Indonesia';
        if ($code == 'IR')
            return 'Iran';
        if ($code == 'IQ')
            return 'Iraq';
        if ($code == 'IE')
            return 'Ireland';
        if ($code == 'IM')
            return 'Isle of Man';
        if ($code == 'IL')
            return 'Israel';
        if ($code == 'IT')
            return 'Italy';
        if ($code == 'JM')
            return 'Jamaica';
        if ($code == 'JP')
            return 'Japan';
        if ($code == 'JE')
            return 'Jersey';
        if ($code == 'JO')
            return 'Jordan';
        if ($code == 'KZ')
            return 'Kazakhstan';
        if ($code == 'KE')
            return 'Kenya';
        if ($code == 'KI')
            return 'Kiribati';
        if ($code == 'KP')
            return 'Korea';
        if ($code == 'KR')
            return 'Korea';
        if ($code == 'KW')
            return 'Kuwait';
        if ($code == 'KG')
            return 'Kyrgyz Republic';
        if ($code == 'LA')
            return 'Lao';
        if ($code == 'LV')
            return 'Latvia';
        if ($code == 'LB')
            return 'Lebanon';
        if ($code == 'LS')
            return 'Lesotho';
        if ($code == 'LR')
            return 'Liberia';
        if ($code == 'LY')
            return 'Libyan Arab Jamahiriya';
        if ($code == 'LI')
            return 'Liechtenstein';
        if ($code == 'LT')
            return 'Lithuania';
        if ($code == 'LU')
            return 'Luxembourg';
        if ($code == 'MO')
            return 'Macao';
        if ($code == 'MK')
            return 'Macedonia';
        if ($code == 'MG')
            return 'Madagascar';
        if ($code == 'MW')
            return 'Malawi';
        if ($code == 'MY')
            return 'Malaysia';
        if ($code == 'MV')
            return 'Maldives';
        if ($code == 'ML')
            return 'Mali';
        if ($code == 'MT')
            return 'Malta';
        if ($code == 'MH')
            return 'Marshall Islands';
        if ($code == 'MQ')
            return 'Martinique';
        if ($code == 'MR')
            return 'Mauritania';
        if ($code == 'MU')
            return 'Mauritius';
        if ($code == 'YT')
            return 'Mayotte';
        if ($code == 'MX')
            return 'Mexico';
        if ($code == 'FM')
            return 'Micronesia';
        if ($code == 'MD')
            return 'Moldova';
        if ($code == 'MC')
            return 'Monaco';
        if ($code == 'MN')
            return 'Mongolia';
        if ($code == 'ME')
            return 'Montenegro';
        if ($code == 'MS')
            return 'Montserrat';
        if ($code == 'MA')
            return 'Morocco';
        if ($code == 'MZ')
            return 'Mozambique';
        if ($code == 'MM')
            return 'Myanmar';
        if ($code == 'NA')
            return 'Namibia';
        if ($code == 'NR')
            return 'Nauru';
        if ($code == 'NP')
            return 'Nepal';
        if ($code == 'AN')
            return 'Netherlands Antilles';
        if ($code == 'NL')
            return 'Netherlands the';
        if ($code == 'NC')
            return 'New Caledonia';
        if ($code == 'NZ')
            return 'New Zealand';
        if ($code == 'NI')
            return 'Nicaragua';
        if ($code == 'NE')
            return 'Niger';
        if ($code == 'NG')
            return 'Nigeria';
        if ($code == 'NU')
            return 'Niue';
        if ($code == 'NF')
            return 'Norfolk Island';
        if ($code == 'MP')
            return 'Northern Mariana Islands';
        if ($code == 'NO')
            return 'Norway';
        if ($code == 'OM')
            return 'Oman';
        if ($code == 'PK')
            return 'Pakistan';
        if ($code == 'PW')
            return 'Palau';
        if ($code == 'PS')
            return 'Palestinian Territory';
        if ($code == 'PA')
            return 'Panama';
        if ($code == 'PG')
            return 'Papua New Guinea';
        if ($code == 'PY')
            return 'Paraguay';
        if ($code == 'PE')
            return 'Peru';
        if ($code == 'PH')
            return 'Philippines';
        if ($code == 'PN')
            return 'Pitcairn Islands';
        if ($code == 'PL')
            return 'Poland';
        if ($code == 'PT')
            return 'Portugal, Portuguese Republic';
        if ($code == 'PR')
            return 'Puerto Rico';
        if ($code == 'QA')
            return 'Qatar';
        if ($code == 'RE')
            return 'Reunion';
        if ($code == 'RO')
            return 'Romania';
        if ($code == 'RU')
            return 'Russian Federation';
        if ($code == 'RW')
            return 'Rwanda';
        if ($code == 'BL')
            return 'Saint Barthelemy';
        if ($code == 'SH')
            return 'Saint Helena';
        if ($code == 'KN')
            return 'Saint Kitts and Nevis';
        if ($code == 'LC')
            return 'Saint Lucia';
        if ($code == 'MF')
            return 'Saint Martin';
        if ($code == 'PM')
            return 'Saint Pierre and Miquelon';
        if ($code == 'VC')
            return 'Saint Vincent and the Grenadines';
        if ($code == 'WS')
            return 'Samoa';
        if ($code == 'SM')
            return 'San Marino';
        if ($code == 'ST')
            return 'Sao Tome and Principe';
        if ($code == 'SA')
            return 'Saudi Arabia';
        if ($code == 'SN')
            return 'Senegal';
        if ($code == 'RS')
            return 'Serbia';
        if ($code == 'SC')
            return 'Seychelles';
        if ($code == 'SL')
            return 'Sierra Leone';
        if ($code == 'SG')
            return 'Singapore';
        if ($code == 'SK')
            return 'Slovakia (Slovak Republic)';
        if ($code == 'SI')
            return 'Slovenia';
        if ($code == 'SB')
            return 'Solomon Islands';
        if ($code == 'SO')
            return 'Somalia, Somali Republic';
        if ($code == 'ZA')
            return 'South Africa';
        if ($code == 'GS')
            return 'South Georgia and the South Sandwich Islands';
        if ($code == 'ES')
            return 'Spain';
        if ($code == 'LK')
            return 'Sri Lanka';
        if ($code == 'SD')
            return 'Sudan';
        if ($code == 'SR')
            return 'Suriname';
        if ($code == 'SJ')
            return 'Svalbard & Jan Mayen Islands';
        if ($code == 'SZ')
            return 'Swaziland';
        if ($code == 'SE')
            return 'Sweden';
        if ($code == 'CH')
            return 'Switzerland, Swiss Confederation';
        if ($code == 'SY')
            return 'Syrian Arab Republic';
        if ($code == 'TW')
            return 'Taiwan';
        if ($code == 'TJ')
            return 'Tajikistan';
        if ($code == 'TZ')
            return 'Tanzania';
        if ($code == 'TH')
            return 'Thailand';
        if ($code == 'TL')
            return 'Timor-Leste';
        if ($code == 'TG')
            return 'Togo';
        if ($code == 'TK')
            return 'Tokelau';
        if ($code == 'TO')
            return 'Tonga';
        if ($code == 'TT')
            return 'Trinidad and Tobago';
        if ($code == 'TN')
            return 'Tunisia';
        if ($code == 'TR')
            return 'Turkey';
        if ($code == 'TM')
            return 'Turkmenistan';
        if ($code == 'TC')
            return 'Turks and Caicos Islands';
        if ($code == 'TV')
            return 'Tuvalu';
        if ($code == 'UG')
            return 'Uganda';
        if ($code == 'UA')
            return 'Ukraine';
        if ($code == 'AE')
            return 'United Arab Emirates';
        if ($code == 'GB')
            return 'United Kingdom';
        if ($code == 'US')
            return 'United States of America';
        if ($code == 'UM')
            return 'United States Minor Outlying Islands';
        if ($code == 'VI')
            return 'United States Virgin Islands';
        if ($code == 'UY')
            return 'Uruguay, Eastern Republic of';
        if ($code == 'UZ')
            return 'Uzbekistan';
        if ($code == 'VU')
            return 'Vanuatu';
        if ($code == 'VE')
            return 'Venezuela';
        if ($code == 'VN')
            return 'Vietnam';
        if ($code == 'WF')
            return 'Wallis and Futuna';
        if ($code == 'EH')
            return 'Western Sahara';
        if ($code == 'YE')
            return 'Yemen';
        if ($code == 'ZM')
            return 'Zambia';
        if ($code == 'ZW')
            return 'Zimbabwe';
    }

}
